from collections import defaultdict
class Solution(object):
    def longestArithSeqLength(self, A):
        lst = [{} for i in range(len(A))]  ## pair of key:(different and the longest subsequence length )
        max = 2
        if (len(A) <=1):
            return len(A)
        for i in range(len(A)):
            lst[i] = defaultdict(lambda:1)
            for t in range(i):
                lst[i][A[i]-A[t]] = lst[t][A[i]-A[t]] + 1
                if (lst[i][A[i]-A[t]] >max):
                    max = lst[i][A[i]-A[t]]
        return max 
        
 ## Python source code  
