## dynamic programming approach by creating the 2-D Dimension array and calculate backtrackly by the equation solve(m,n)=solve(m,n-1)+solve(m,n-1)
const=10**9+7
# Complete the solve function below.
def solve(n, m):
    arr=[[0 for i in range(n+1)] for _ in range(m+1)]
    for i in range(1,m+1):
        arr[i][1]=i+1
    for i in range(1,n+1):
        arr[1][i]=i+1
    for i in range(2,m+1):
        for j in range(2,n+1):
            arr[i][j]=(arr[i][j-1]+arr[i-1][j])%const
    return arr[m][n]
