int longest_palindrome(String s){
    int [][] dp= new int[s.length()][s.length()];
    for (int j=0;j<s.length();j++){
        for (int i=s.length();i>=0;i--){
            if (i<=j){
            dp[i][j]=1;
            if (i==j){
                dp[i][j]=1;
            }
            else if (i==j-1 && s.charAt(i)==s.charAt(j)){
                dp[i][j]=2;
            }

            else{
            
            if (s.charAt(j)==s.charAt(i)){
                dp[i][j]=dp[i+1][j-1]+2;
            }
            else{
                dp[i][j]=Math.max(dp[i][j-1],dp[i+1][j]);
                }
            }
        }
    }
}
    return dp[0][s.length()-1];
}
boolean kpalindrome(String s, int k) {
    return longest_palindrome(s)+k>=s.length();
}
